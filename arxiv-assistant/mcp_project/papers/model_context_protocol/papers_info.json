{
  "2505.02279v2": {
    "title": "A survey of agent interoperability protocols: Model Context Protocol (MCP), Agent Communication Protocol (ACP), Agent-to-Agent Protocol (A2A), and Agent Network Protocol (ANP)",
    "authors": [
      "Abul Ehtesham",
      "Aditi Singh",
      "Gaurav Kumar Gupta",
      "Saket Kumar"
    ],
    "summary": "Large language model powered autonomous agents demand robust, standardized\nprotocols to integrate tools, share contextual data, and coordinate tasks\nacross heterogeneous systems. Ad-hoc integrations are difficult to scale,\nsecure, and generalize across domains. This survey examines four emerging agent\ncommunication protocols: Model Context Protocol (MCP), Agent Communication\nProtocol (ACP), Agent-to-Agent Protocol (A2A), and Agent Network Protocol\n(ANP), each addressing interoperability in deployment contexts. MCP provides a\nJSON-RPC client-server interface for secure tool invocation and typed data\nexchange. ACP defines a general-purpose communication protocol over RESTful\nHTTP, supporting MIME-typed multipart messages and synchronous and asynchronous\ninteractions. Its lightweight and runtime-independent design enables scalable\nagent invocation, while features like session management, message routing, and\nintegration with role-based and decentralized identifiers (DIDs). A2A enables\npeer-to-peer task delegation using capability-based Agent Cards, supporting\nsecure and scalable collaboration across enterprise agent workflows. ANP\nsupports open network agent discovery and secure collaboration using W3C\ndecentralized identifiers DIDs and JSON-LD graphs. The protocols are compared\nacross multiple dimensions, including interaction modes, discovery mechanisms,\ncommunication patterns, and security models. Based on the comparative analysis,\na phased adoption roadmap is proposed: beginning with MCP for tool access,\nfollowed by ACP for structured, multimodal messaging session-aware interaction\nand both online and offline agent discovery across scalable, HTTP-based\ndeployments A2A for collaborative task execution, and extending to ANP for\ndecentralized agent marketplaces. This work provides a comprehensive foundation\nfor designing secure, interoperable, and scalable ecosystems of LLM-powered\nagents.",
    "pdf_url": "http://arxiv.org/pdf/2505.02279v2",
    "published": "2025-05-04"
  },
  "1509.03646v1": {
    "title": "Key Exchange Protocol in the Trusted Data Servers Context",
    "authors": [
      "Quoc-Cuong To",
      "Benjamin Nguyen",
      "Philippe Pucheral"
    ],
    "summary": "The aim of this technical report is to complement the work in [To et al.\n2014] by proposing a Group Key Exchange protocol so that the Querier and TDSs\n(and TDSs themselves) can securely create and exchange the shared key. Then,\nthe security of this protocol is formally proved using the game-based model.\nFinally, we perform the comparison between this protocol and other related\nworks.",
    "pdf_url": "http://arxiv.org/pdf/1509.03646v1",
    "published": "2015-09-11"
  },
  "2103.16325v1": {
    "title": "Systematic Mapping Protocol: Reasoning Algorithms on Feature Model",
    "authors": [
      "Samuel Sep\u00falveda",
      "Marcelo Esperguel"
    ],
    "summary": "Context: The importance of the feature modeling for the software product\nlines considering the modeling and management of the variability. Objective:\nDefine a protocol to conduct a systematic mapping study to summarize and\nsynthesize the evidence on reasoning algorithms for feature modeling. Method:\nApplication the protocol to conduct a systematic mapping study according the\nguidelines of K. Petersen. Results: A validated protocol to conduct a\nsystematic mapping study. Conclusions: Initial findings show that a more\ndetailed review for the different reasoning algorithms for feature modeling is\nneeded.",
    "pdf_url": "http://arxiv.org/pdf/2103.16325v1",
    "published": "2021-03-26"
  },
  "2502.09251v1": {
    "title": "Recipe: Hardware-Accelerated Replication Protocols",
    "authors": [
      "Dimitra Giantsidi",
      "Emmanouil Giortamis",
      "Julian Pritzi",
      "Maurice Bailleu",
      "Manos Kapritsos",
      "Pramod Bhatotia"
    ],
    "summary": "Replication protocols are essential for distributed systems, ensuring\nconsistency, reliability, and fault tolerance. Traditional Crash Fault Tolerant\n(CFT) protocols, which assume a fail-stop model, are inadequate for untrusted\ncloud environments where adversaries or software bugs can cause Byzantine\nbehavior. Byzantine Fault Tolerant (BFT) protocols address these threats but\nface significant performance, resource overheads, and scalability challenges.\nThis paper introduces Recipe, a novel approach to transforming CFT protocols to\noperate securely in Byzantine settings without altering their core logic.\nRecipe rethinks CFT protocols in the context of modern cloud hardware,\nincluding many-core servers, RDMA-capable networks, and Trusted Execution\nEnvironments (TEEs). The approach leverages these advancements to enhance the\nsecurity and performance of replication protocols in untrusted cloud\nenvironments. Recipe implements two practical security mechanisms, i.e.,\ntransferable authentication and non-equivocation, using TEEs and\nhigh-performance networking stacks (e.g., RDMA, DPDK). These mechanisms ensure\nthat any CFT protocol can be transformed into a BFT protocol, guaranteeing\nauthenticity and non-equivocation. The Recipe protocol consists of five key\ncomponents: transferable authentication, initialization, normal operation, view\nchange, and recovery phases. The protocol's correctness is formally verified\nusing Tamarin, a symbolic model checker. Recipe is implemented as a library and\napplied to transform four widely used CFT protocols-Raft, Chain Replication,\nABD, and AllConcur-into Byzantine settings. The results demonstrate up to 24x\nhigher throughput compared to PBFT and 5.9x better performance than\nstate-of-the-art BFT protocols. Additionally, Recipe requires fewer replicas\nand offers confidentiality, a feature absent in traditional BFT protocols.",
    "pdf_url": "http://arxiv.org/pdf/2502.09251v1",
    "published": "2025-02-13"
  },
  "1501.01657v1": {
    "title": "A General Model for MAC Protocol Selection in Wireless Sensor Networks",
    "authors": [
      "Abolfazl Asudeh",
      "Gergely V. Zaruba",
      "Sajal K. Das"
    ],
    "summary": "Wireless Sensor Networks (WSNs) are being deployed for different\napplications, each having its own structure, goals and requirements. Medium\naccess control (MAC) protocols play a significant role in WSNs and hence should\nbe tuned to the applications. However, there is no for selecting MAC protocols\nfor different situations. Therefore, it is hard to decide which MAC protocol is\ngood for a given situation. Having a precise model for each MAC protocol, on\nthe other hand, is almost impossible. Using the intuition that the protocols in\nthe same behavioral category perform similarly, our goal in this paper is to\nintroduce a general model that selects the protocol(s) that satisfy the given\nrequirements from the category that performs better for a given context. We\ndefine the Combined Performance Function (CPF) to demonstrate the performance\nof different categories protocols for different contexts. Having the general\nmodel, we then discuss the model scalability for adding new protocols,\ncategories, requirements, and performance criteria. Considering energy\nconsumption and delay as the initial performance criteria of the model, we\nfocus on deriving mathematical models for them. The results extracted from CPF\nare the same as the well-known rule of thumb for the MAC protocols that\nverifies our model. We validate our models with the help of simulation study.\nWe also implemented the current CPF model in a web page to make the model\nonline and useful.",
    "pdf_url": "http://arxiv.org/pdf/1501.01657v1",
    "published": "2015-01-07"
  }
}